[
    {
        "id": "d30f86340f610285",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "16b5753bd4d1f0a0",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8cb1c5cd55e7b8a6",
        "type": "tab",
        "label": "Template preservation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a9fdb53338e43b97",
        "type": "http in",
        "z": "d30f86340f610285",
        "name": "",
        "url": "/",
        "method": "get",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "3f65cceaf7c52cfb"
            ]
        ]
    },
    {
        "id": "6d306d8c46512ff1",
        "type": "http response",
        "z": "d30f86340f610285",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "f3bfa89627bcb047",
        "type": "template",
        "z": "d30f86340f610285",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To-Do List</title>\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"./img/pokeball.png\">\n    <link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n    <!-- <script src=\"https://unpkg.com/mustache@latest\"></script> -->\n    <script src=\"./js/mustache.min.js\"></script>\n    <style>\n        #inputGroup-sizing-lg:hover {\n            background-color: burlywood;\n            transition: box-shadow 0.3s ease;\n            cursor: pointer;\n            box-shadow: 4px 4px 12px rgba(0, 0, 0, 0.4);\n        }\n\n        ;\n\n        .btn.btn-primary:focus {\n            transition: box-shadow 0.3s ease;\n            border-color: #86b7fe;\n            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n            border-radius: 3px;\n        }\n    </style>\n    <script>\n        function createTask(params) {\n            \n        }\n        function handleCheck(chkbx, lbl) {\n            const temp_chkbx = document.getElementById(chkbx);\n            if (temp_chkbx.checked) {\n                lbl.textContent = \"☑\";\n            }\n            else{\n                lbl.textContent = \"☐\";\n            }\n        }\n    </script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                {{#error}}\n                <div class=\"alert alert-danger mt-5\">\n                    <h4>{{message}}</h4>\n                </div>\n                {{/error}}\n                <!-- {{#message}}<p class=\"text text-danger\">{{.}}</p>{{/message}} -->\n                <form action=\"/add\" method=\"POST\">\n                    <div class=\"input-group input-group-lg mt-5\">\n                        <input required type=\"text\" name=\"name\" class=\"form-control {{#error}} border-danger {{/error}}\" placeholder=\"Big Man Charizard\"/>\n                        <button class=\"btn btn-primary\" type=\"reset\" style=\"padding-left: 10px; padding-right: 10px; background-color: white;color: black;\">Temizle</button>\n                        <button class=\"btn btn-primary\" type=\"submit\" style=\"padding-left: 30px; padding-right: 30px;\">Ekle</button>\n                    </div>\n                </form>\n                <div class=\"table-responsive mt-5 border\">\n                    <table class=\"table table-striped table-hover border mb-0 \">\n                        <thead>\n                            <tr>\n                                <th>Task</th>\n                                <th>Details... Details</th>\n                                <th style=\"text-align: center;\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {{#payload}}\n                                <tr>\n                                    <td>{{name}}</td>\n                                    <td>date, due date, etc.</td>\n                                    <td align=\"right\">\n                                        \n                                        <div class=\"btn-group text-right\">\n                                            <form method=\"POST\">\n                                                <input type=\"hidden\" name=\"id\" value=\"{{id}}\"  />\n                                            {{#done}}\n                                                <button type=\"submit\" class=\"btn btn-outline-dark\">Mark as incomplete</button>\n                                            {{/done}}\n                                            {{^done}}\n                                                <button type=\"submit\" class=\"btn btn-outline-primary\">Update</button>\n                                                <button type=\"submit\" class=\"btn btn-outline-secondary\">Reminder</button>\n                                                <button type=\"submit\" class=\"btn btn-outline-dark\">Delay</button>\n                                                <button type=\"submit\" class=\"btn btn-outline-dark\">complete</button>\n                                            {{/done}}\n                                            <button type=\"submit\" formaction=\"/deleteTask\" class=\"btn btn-outline-warning\">Delete</button>\n                                            </form>\n                                        </div>\n                                    </td>\n                                </tr>\n                            {{/payload}}\n                            {{^payload}}\n                                <tr>\n                                    <td class=\"text-muted\" colspan=\"3\">Henüz Task yok</td>\n                                </tr>\n                            {{/payload}}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <script>\n        src=\"/js/bootsrap.bundle.min.js\"\n    </script>\n    <!--<p>Big Man Blastoise</p>-->\n</body>\n\n</html>\n\n<!--\nButton 110 {\n\twidth: 83px;\n\theight: 38px;\n\tpadding: 0px 10px;\n\tbackground: #0178FD;\n\tborder: 1px solid #0178FD;\n\tborder-radius: 4px;\n\tcolor: #FFFFFF;\n\tfont-family: \"Helvetica\";\n\tfont-weight: 400;\n\tfont-size: 16px;\n\ttext-align: center;\n}\n-->",
        "output": "str",
        "x": 460,
        "y": 120,
        "wires": [
            [
                "6d306d8c46512ff1"
            ]
        ]
    },
    {
        "id": "3abf7d4bfdd8f625",
        "type": "function",
        "z": "d30f86340f610285",
        "name": "DB",
        "func": "// Flush DB\nglobal.set(\"DB\",{\n    todo:[]\n})",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nconst DB = global.get(\"DB\") || {\n    todo: [] //todo: bir koleksiyona denk gelir []: veriye denk gelir.\n}\nglobal.set(\"DB\", DB)\n\n/**\n * ToDo DB Şema\n * id :num\n * name :\"\"\n * done:true|false\n * stamp: {\n    *  CreatedAt: sometime,\n    *  ip: IP,\n    *  user:\"\",\n    *  email: \"\",\n * \n * }\n*/",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 40,
        "wires": []
    },
    {
        "id": "50b473d2a49c7e50",
        "type": "inject",
        "z": "d30f86340f610285",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "3abf7d4bfdd8f625"
            ]
        ]
    },
    {
        "id": "3f65cceaf7c52cfb",
        "type": "function",
        "z": "d30f86340f610285",
        "name": "db.todo.find()",
        "func": "const DB = global.get(\"DB\")\nmsg.payload = DB.todo;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 120,
        "wires": [
            [
                "f3bfa89627bcb047"
            ]
        ]
    },
    {
        "id": "49b070ec7b4905d6",
        "type": "http in",
        "z": "d30f86340f610285",
        "name": "addTask",
        "url": "/add",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 220,
        "wires": [
            [
                "b477b2bcf037fc13"
            ]
        ]
    },
    {
        "id": "13c8d762c253c09e",
        "type": "http response",
        "z": "d30f86340f610285",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "9738fbf514136ba6",
        "type": "function",
        "z": "d30f86340f610285",
        "name": "db.todo.insert()",
        "func": "const DB = global.get(\"DB\")\nlet todo = DB.todo\n\nconst now = new Date().getTime();\ntodo.push({\n    id: now,\n    name:msg.payload.name,\n    done:false,\n    stamp:{\n        CreatedAt:now,\n        ip:msg.req.ip,\n        username:\"\",\n        email:\"\",\n    }\n})\nDB.todo = todo\nglobal.set(\"DB\",DB)\n\n/**\n * ToDo DB Şema\n * id :num\n * name :\"\"\n * done:true|false\n * stamp: {\n    *  CreatedAt: sometime,\n    *  ip: IP,\n    *  user:\"\",\n    *  email: \"\",\n * \n * }\n*/\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 220,
        "wires": [
            [
                "13c8d762c253c09e"
            ]
        ]
    },
    {
        "id": "b477b2bcf037fc13",
        "type": "function",
        "z": "d30f86340f610285",
        "name": "validation",
        "func": "if(!msg.payload.name){\n    node.error(\"You cannot add a nameless task.\", msg);\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 220,
        "wires": [
            [
                "9738fbf514136ba6"
            ]
        ]
    },
    {
        "id": "eab5ee6ebd13aec8",
        "type": "catch",
        "z": "d30f86340f610285",
        "name": "",
        "scope": [
            "b477b2bcf037fc13"
        ],
        "uncaught": false,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "863b0a0285ecdc3c"
            ]
        ]
    },
    {
        "id": "6174979e5eaf9458",
        "type": "link in",
        "z": "d30f86340f610285",
        "name": "link in 1",
        "links": [
            "863b0a0285ecdc3c",
            "e9612ac162761d79",
            "5a9e7156ac61d720",
            "120bde15a98516bb",
            "b4551f1736463831"
        ],
        "x": 165,
        "y": 80,
        "wires": [
            [
                "3f65cceaf7c52cfb"
            ]
        ]
    },
    {
        "id": "863b0a0285ecdc3c",
        "type": "link out",
        "z": "d30f86340f610285",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "6174979e5eaf9458"
        ],
        "x": 405,
        "y": 280,
        "wires": []
    },
    {
        "id": "f6eee42979577bd1",
        "type": "http in",
        "z": "d30f86340f610285",
        "name": "deleteTask",
        "url": "/deleteTask",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 440,
        "wires": [
            [
                "f9e390d75f519b8b"
            ]
        ]
    },
    {
        "id": "923f85e557a7adcf",
        "type": "function",
        "z": "d30f86340f610285",
        "name": "db.todo.delete()",
        "func": "const DB = global.get(\"DB\")\nlet todo = DB.todo\n\nconst index = todo.findIndex(x => x.id == msg.payload.id)\n\nif(!~index){\n    msg.error={\n        message:\"No matching task found with the ID.\"\n    }\n    return [null,msg]\n}\n\ntodo.splice(index,1)\n\nDB.todo = todo\n\nglobal.set(\"DB\",DB)\n\n/**\n * ToDo DB Şema\n * id :num\n * name :\"\"\n * done:true|false\n * stamp: {\n    *  CreatedAt: sometime,\n    *  ip: IP,\n    *  user:\"\",\n    *  email: \"\",\n * \n * }\n*/\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 420,
        "wires": [
            [
                "c6eb080e57c76c71"
            ],
            [
                "e9612ac162761d79"
            ]
        ],
        "outputLabels": [
            "Success",
            "Error"
        ]
    },
    {
        "id": "c6eb080e57c76c71",
        "type": "http response",
        "z": "d30f86340f610285",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 620,
        "y": 420,
        "wires": []
    },
    {
        "id": "f9e390d75f519b8b",
        "type": "function",
        "z": "d30f86340f610285",
        "name": "validation",
        "func": "if(!msg.payload.id){\n    msg.error = {\n        message:\"The task you wanted to delete must have an ID.\"\n    }\n    return [null, msg]\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 440,
        "wires": [
            [
                "923f85e557a7adcf"
            ],
            [
                "5a9e7156ac61d720"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "e2cd8e5cc2927272",
        "type": "comment",
        "z": "d30f86340f610285",
        "name": "Spared",
        "info": "",
        "x": 70,
        "y": 520,
        "wires": []
    },
    {
        "id": "e9612ac162761d79",
        "type": "link out",
        "z": "d30f86340f610285",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "6174979e5eaf9458"
        ],
        "x": 575,
        "y": 480,
        "wires": []
    },
    {
        "id": "5a9e7156ac61d720",
        "type": "link out",
        "z": "d30f86340f610285",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "6174979e5eaf9458"
        ],
        "x": 365,
        "y": 480,
        "wires": []
    },
    {
        "id": "0b7730b29503a68e",
        "type": "http response",
        "z": "16b5753bd4d1f0a0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 120,
        "wires": []
    },
    {
        "id": "bd7e8ca9590ad55e",
        "type": "template",
        "z": "16b5753bd4d1f0a0",
        "name": "test",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<head>\n    <script src=\"https://unpkg.com/mustache@latest\"></script>\n    <title>Mustache Test</title>\n</head>\n<body>\n    \n    <h2>My Tasks</h2>\n\n    <table>\n        <tbody id=\"task-list-container\">\n            </tbody>\n    </table>\n\n    <script id=\"task-template\" type=\"text/template\">\n        {{#payload}}\n            <tr>\n                <td>{{name}}</td>\n                <td>{{#done}}Completed{{/done}}{{^done}}Pending{{/done}}</td>\n                <td>\n                    </td>\n            </tr>\n        {{/payload}}\n        {{^payload}}\n            <tr>\n                <td colspan=\"3\">Henüz Task yok</td>\n            </tr>\n        {{/payload}}\n    </script>\n\n\n    <script>\n        // The data you want to display\n        const taskData = {\n            \"payload\": [\n                { \"name\": \"Finish the report\", \"done\": true },\n                { \"name\": \"Call the client\", \"done\": false }\n            ]\n        };\n\n        // Find the template's HTML\n        const template = document.getElementById('task-template').innerHTML;\n\n        // Find the destination container\n        const destination = document.getElementById('task-list-container');\n        \n        // Render the template with the data\n        const renderedHTML = Mustache.render(template, taskData);\n        \n        // Put the rendered HTML onto the page\n        destination.innerHTML = renderedHTML;\n    </script>\n\n</body>\n</html>",
        "output": "str",
        "x": 310,
        "y": 120,
        "wires": [
            [
                "0b7730b29503a68e"
            ]
        ]
    },
    {
        "id": "c8c7e5b119e67cee",
        "type": "http in",
        "z": "16b5753bd4d1f0a0",
        "name": "",
        "url": "/test",
        "method": "get",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "bd7e8ca9590ad55e"
            ]
        ]
    },
    {
        "id": "445340151fa266ce",
        "type": "template",
        "z": "16b5753bd4d1f0a0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "plain",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To-Do List</title>\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"./img/pokeball.png\">\n    <link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n    <style>\n        #inputGroup-sizing-lg:hover {\n            background-color: burlywood;\n            transition: box-shadow 0.3s ease;\n            cursor: pointer;\n            box-shadow: 4px 4px 12px rgba(0, 0, 0, 0.4);\n        }\n\n        ;\n\n        .btn.btn-primary:focus {\n            transition: box-shadow 0.3s ease;\n            border-color: #86b7fe;\n            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n            border-radius: 3px;\n        }\n    </style>\n    <script>\n        function createTask(params) {\n            \n        }\n        function handleCheck(chkbx, lbl) {\n            const temp_chkbx = document.getElementById(chkbx);\n            if (temp_chkbx.checked) {\n                lbl.textContent = \"☑\";\n            }\n            else{\n                lbl.textContent = \"☐\";\n            }\n        }\n    </script>\n</head>\n\n<body>\n    <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n        <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#\">Link</a>\n                    </li>\n                    <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\"\n                            aria-expanded=\"false\">\n                            Dropdown\n                        </a>\n                        <ul class=\"dropdown-menu\">\n                            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n                            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n                            <li>\n                                <hr class=\"dropdown-divider\">\n                            </li>\n                            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                        </ul>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link disabled\" aria-disabled=\"true\">Disabled</a>\n                    </li>\n                </ul>\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n\n    <!-- NAVBAREND -->\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                <form action=\"\">\n                    <div class=\"input-group input-group-lg mt-5\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Big Man Charizard\"/>\n                        <button class=\"btn btn-primary\" type=\"reset\" style=\"padding-left: 10px; padding-right: 10px; background-color: white;color: black;\">Temizle</button>\n                        <button class=\"btn btn-primary\" type=\"submit\" style=\"padding-left: 30px; padding-right: 30px;\">Ekle</button>\n                    </div>\n                </form>\n                <div class=\"table-responsive mt-5 border\">\n                    <table class=\"table table-striped table-hover border mb-0 \">\n                        <thead>\n                            <tr>\n                                <th>Task</th>\n                                <th>Details... Details</th>\n                                <th style=\"text-align: center;\">Actions</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {{#payload}}\n                            <tr>\n                                <td>example task1</td>\n                                <td>date, due date, etc.</td>\n                                <td align=\"right\">\n                                    <div class=\"btn-group text-right\">\n                                        <button class=\"btn btn-outline-primary\">Update</button>\n                                        <button class=\"btn btn-outline-secondary\">Reminder</button>\n                                        <button class=\"btn btn-outline-warning\">Delete</button>\n                                        <button class=\"btn btn-outline-dark\">Delay</button>\n                                    </div>\n                                </td>\n                                <td>\n                                    <input type=\"checkbox\"/>\n                                </td>\n                            </tr>\n                            {{/payload}}\n                            <tr>\n                                <td>example task2</td>\n                                <td>date, due date, etc.</td>\n                                <td align=\"right\">\n                                    <div class=\"btn-group text-right\">\n                                        <button class=\"btn btn-outline-primary\">Update</button>\n                                        <button class=\"btn btn-outline-secondary\">Reminder</button>\n                                        <button class=\"btn btn-outline-warning\">Delete</button>\n                                        <button class=\"btn btn-outline-dark\">Delay</button>\n                                    </div>\n                                </td>\n                                <td>\n                                    <input type=\"checkbox\"/>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>example task3</td>\n                                <td>date, due date, etc.</td>\n                                <td align=\"right\">\n                                    <div class=\"btn-group text-right\">\n                                        <button class=\"btn btn-outline-primary\">Update</button>\n                                        <button class=\"btn btn-outline-secondary\">Reminder</button>\n                                        <button class=\"btn btn-outline-warning\">Delete</button>\n                                        <button class=\"btn btn-outline-dark\">Delay</button>\n                                    </div>\n                                </td>\n                                <td>\n                                    <input type=\"checkbox\" class=\"btn-check\" id=\"btncheck1\" onchange=\"handleCheck(this, label1)\"/>\n                                    <label for=\"btncheck1\" class=\"btn btn-outline-primary border-0\" id=\"label1\" onchange=\"handleCheck(this, label1)\">☐</label>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td><a href=\"admin_panel.html\">example task4</a></td>\n                                <td>date, due date, etc.</td>\n                                <td align=\"right\">\n                                    <div class=\"btn-group text-right\">\n                                        <button class=\"btn btn-outline-primary\">Update</button>\n                                        <button class=\"btn btn-outline-secondary\">Reminder</button>\n                                        <button class=\"btn btn-outline-warning\">Delete</button>\n                                        <button class=\"btn btn-outline-dark\">Delay</button>\n                                    </div>\n                                </td>\n                                <td>\n                                    <input type=\"checkbox\" class=\"btn-check\" id=\"btncheck1\" onchange=\"handleCheck(this, label1)\"/>\n                                    <label for=\"btncheck1\" class=\"btn btn-outline-primary border-0\" id=\"label1\" onchange=\"handleCheck(this, label1)\">☐</label>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <script>\n        src=\"/js/bootsrap.bundle.min.js\"\n    </script>\n    <!--<p>Big Man Blastoise</p>-->\n</body>\n\n</html>\n\n<!--\nButton 110 {\n\twidth: 83px;\n\theight: 38px;\n\tpadding: 0px 10px;\n\tbackground: #0178FD;\n\tborder: 1px solid #0178FD;\n\tborder-radius: 4px;\n\tcolor: #FFFFFF;\n\tfont-family: \"Helvetica\";\n\tfont-weight: 400;\n\tfont-size: 16px;\n\ttext-align: center;\n}\n-->",
        "output": "str",
        "x": 300,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "93db7d1859b03c3a",
        "type": "http in",
        "z": "16b5753bd4d1f0a0",
        "name": "deleteTaskSpared",
        "url": "/deleteTaskSpared",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "a61abee011337f3a",
                "a455b04a5ddf65c9"
            ]
        ]
    },
    {
        "id": "a61abee011337f3a",
        "type": "debug",
        "z": "16b5753bd4d1f0a0",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 260,
        "wires": []
    },
    {
        "id": "62183629e92c7b77",
        "type": "function",
        "z": "16b5753bd4d1f0a0",
        "name": "db.todo.delete()",
        "func": "const DB = global.get(\"DB\")\nlet todo = DB.todo\n\nconst index = todo.findIndex(x => x.id == msg.payload.id)\n\nif(!~index){\n    msg.message=\"No matching task found with the ID.\";\n    return [null,msg]\n}\n\ntodo.splice(index,1)\n\nDB.todo = todo\n\nglobal.set(\"DB\",DB)\n\n/**\n * ToDo DB Şema\n * id :num\n * name :\"\"\n * done:true|false\n * stamp: {\n    *  CreatedAt: sometime,\n    *  ip: IP,\n    *  user:\"\",\n    *  email: \"\",\n * \n * }\n*/\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "9f073915715f8a56"
            ],
            [
                "120bde15a98516bb",
                "705e18b530138bb5"
            ]
        ],
        "outputLabels": [
            "Success",
            "Error"
        ]
    },
    {
        "id": "9f073915715f8a56",
        "type": "http response",
        "z": "16b5753bd4d1f0a0",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 640,
        "y": 280,
        "wires": []
    },
    {
        "id": "a455b04a5ddf65c9",
        "type": "function",
        "z": "16b5753bd4d1f0a0",
        "name": "validation",
        "func": "if(!msg.payload.id){\n    msg.message = \"The task you wanted to delete must have an ID.\";\n    return [null, msg]\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 300,
        "wires": [
            [
                "62183629e92c7b77"
            ],
            [
                "b4551f1736463831",
                "32437af3f1405c0d"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "6d20336a458d780c",
        "type": "comment",
        "z": "16b5753bd4d1f0a0",
        "name": "Spared",
        "info": "",
        "x": 90,
        "y": 380,
        "wires": []
    },
    {
        "id": "120bde15a98516bb",
        "type": "link out",
        "z": "16b5753bd4d1f0a0",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "6174979e5eaf9458",
            "312f051dcff7e6b6"
        ],
        "x": 595,
        "y": 340,
        "wires": []
    },
    {
        "id": "b4551f1736463831",
        "type": "link out",
        "z": "16b5753bd4d1f0a0",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "6174979e5eaf9458",
            "312f051dcff7e6b6"
        ],
        "x": 385,
        "y": 340,
        "wires": []
    },
    {
        "id": "32437af3f1405c0d",
        "type": "debug",
        "z": "16b5753bd4d1f0a0",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 380,
        "wires": []
    },
    {
        "id": "705e18b530138bb5",
        "type": "debug",
        "z": "16b5753bd4d1f0a0",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 380,
        "wires": []
    },
    {
        "id": "8d894d13d7c5ebd4",
        "type": "http in",
        "z": "8cb1c5cd55e7b8a6",
        "name": "",
        "url": "/asdf",
        "method": "get",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "38dcc34721c5c362"
            ]
        ]
    },
    {
        "id": "2e31385083da7cc0",
        "type": "http response",
        "z": "8cb1c5cd55e7b8a6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "e8b6c2c1f7873174",
        "type": "template",
        "z": "8cb1c5cd55e7b8a6",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To-Do List</title>\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"./img/pokeball.png\">\n    <link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n    <!-- <script src=\"https://unpkg.com/mustache@latest\"></script> -->\n    <script src=\"./js/mustache.min.js\"></script>\n    <style>\n        #inputGroup-sizing-lg:hover {\n            background-color: burlywood;\n            transition: box-shadow 0.3s ease;\n            cursor: pointer;\n            box-shadow: 4px 4px 12px rgba(0, 0, 0, 0.4);\n        }\n\n        ;\n\n        .btn.btn-primary:focus {\n            transition: box-shadow 0.3s ease;\n            border-color: #86b7fe;\n            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n            border-radius: 3px;\n        }\n    </style>\n    <script>\n        function createTask(params) {\n            \n        }\n        function handleCheck(chkbx, lbl) {\n            const temp_chkbx = document.getElementById(chkbx);\n            if (temp_chkbx.checked) {\n                lbl.textContent = \"☑\";\n            }\n            else{\n                lbl.textContent = \"☐\";\n            }\n        }\n    </script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                {{#error}}\n                <div class=\"alert alert-danger mt-5\">\n                    <h4>{{message}}</h4>\n                </div>\n                {{/error}}\n                <!-- {{#message}}<p class=\"text text-danger\">{{.}}</p>{{/message}} -->\n                <form action=\"/add\" method=\"POST\">\n                    <div class=\"input-group input-group-lg mt-5\">\n                        <input required type=\"text\" name=\"name\" class=\"form-control {{#error}} border-danger {{/error}}\" placeholder=\"Big Man Charizard\"/>\n                        <button class=\"btn btn-primary\" type=\"reset\" style=\"padding-left: 10px; padding-right: 10px; background-color: white;color: black;\">Temizle</button>\n                        <button class=\"btn btn-primary\" type=\"submit\" style=\"padding-left: 30px; padding-right: 30px;\">Ekle</button>\n                    </div>\n                </form>\n                <div class=\"table-responsive mt-5 border\">\n                    <table class=\"table table-striped table-hover border mb-0 \">\n                        <thead>\n                            <tr>\n                                <th>Task</th>\n                                <th>Details... Details</th>\n                                <th style=\"text-align: center;\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {{#payload}}\n                                <tr>\n                                    <td>{{name}}</td>\n                                    <td>date, due date, etc.</td>\n                                    <td align=\"right\">\n                                        \n                                        <div class=\"btn-group text-right\">\n                                            <form method=\"POST\">\n                                                <input type=\"hidden\" name=\"id\" value=\"{{id}}\"  />\n                                            {{#done}}\n                                                <button type=\"submit\" class=\"btn btn-outline-dark\">Mark as incomplete</button>\n                                            {{/done}}\n                                            {{^done}}\n                                                <button type=\"submit\" class=\"btn btn-outline-primary\">Update</button>\n                                                <button type=\"submit\" class=\"btn btn-outline-secondary\">Reminder</button>\n                                                <button type=\"submit\" class=\"btn btn-outline-dark\">Delay</button>\n                                                <button type=\"submit\" class=\"btn btn-outline-dark\">complete</button>\n                                            {{/done}}\n                                            <button type=\"submit\" formaction=\"/deleteTask\" class=\"btn btn-outline-warning\">Delete</button>\n                                            </form>\n                                        </div>\n                                    </td>\n                                </tr>\n                            {{/payload}}\n                            {{^payload}}\n                                <tr>\n                                    <td class=\"text-muted\" colspan=\"3\">Henüz Task yok</td>\n                                </tr>\n                            {{/payload}}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <script>\n        src=\"/js/bootsrap.bundle.min.js\"\n    </script>\n    <!--<p>Big Man Blastoise</p>-->\n</body>\n\n</html>\n\n<!--\nButton 110 {\n\twidth: 83px;\n\theight: 38px;\n\tpadding: 0px 10px;\n\tbackground: #0178FD;\n\tborder: 1px solid #0178FD;\n\tborder-radius: 4px;\n\tcolor: #FFFFFF;\n\tfont-family: \"Helvetica\";\n\tfont-weight: 400;\n\tfont-size: 16px;\n\ttext-align: center;\n}\n-->",
        "output": "str",
        "x": 480,
        "y": 100,
        "wires": [
            [
                "2e31385083da7cc0"
            ]
        ]
    },
    {
        "id": "8f53a825dc696a75",
        "type": "function",
        "z": "8cb1c5cd55e7b8a6",
        "name": "DB",
        "func": "// Flush DB\nglobal.set(\"DB\",{\n    todo:[]\n})",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nconst DB = global.get(\"DB\") || {\n    todo: [] //todo: bir koleksiyona denk gelir []: veriye denk gelir.\n}\nglobal.set(\"DB\", DB)\n\n/**\n * ToDo DB Şema\n * id :num\n * name :\"\"\n * done:true|false\n * stamp: {\n    *  CreatedAt: sometime,\n    *  ip: IP,\n    *  user:\"\",\n    *  email: \"\",\n * \n * }\n*/",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 20,
        "wires": []
    },
    {
        "id": "fd56805b5adeaf85",
        "type": "inject",
        "z": "8cb1c5cd55e7b8a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 20,
        "wires": [
            [
                "8f53a825dc696a75"
            ]
        ]
    },
    {
        "id": "38dcc34721c5c362",
        "type": "function",
        "z": "8cb1c5cd55e7b8a6",
        "name": "db.todo.find()",
        "func": "const DB = global.get(\"DB\")\nmsg.payload = DB.todo;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 100,
        "wires": [
            [
                "e8b6c2c1f7873174"
            ]
        ]
    },
    {
        "id": "d9956ae6e8586b64",
        "type": "http in",
        "z": "8cb1c5cd55e7b8a6",
        "name": "addTask",
        "url": "/addasdf",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "629e01dc6f48e2fc",
                "e50d4dcdf5066774"
            ]
        ]
    },
    {
        "id": "988e2b681430bcd4",
        "type": "http response",
        "z": "8cb1c5cd55e7b8a6",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 620,
        "y": 200,
        "wires": []
    },
    {
        "id": "8d1ac08a97400b5b",
        "type": "function",
        "z": "8cb1c5cd55e7b8a6",
        "name": "db.todo.insert()",
        "func": "const DB = global.get(\"DB\")\nlet todo = DB.todo\n\nconst now = new Date().getTime();\ntodo.push({\n    id: now,\n    name:msg.payload.name,\n    done:false,\n    stamp:{\n        CreatedAt:now,\n        ip:msg.req.ip,\n        user:\"\",\n        email:\"\",\n    }\n})\nDB.todo = todo\nglobal.set(\"DB\",DB)\n\n/**\n * ToDo DB Şema\n * id :num\n * name :\"\"\n * done:true|false\n * stamp: {\n    *  CreatedAt: sometime,\n    *  ip: IP,\n    *  user:\"\",\n    *  email: \"\",\n * \n * }\n*/\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 200,
        "wires": [
            [
                "988e2b681430bcd4"
            ]
        ]
    },
    {
        "id": "629e01dc6f48e2fc",
        "type": "debug",
        "z": "8cb1c5cd55e7b8a6",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 160,
        "wires": []
    },
    {
        "id": "e50d4dcdf5066774",
        "type": "function",
        "z": "8cb1c5cd55e7b8a6",
        "name": "validation",
        "func": "if(!msg.payload.name){\n    node.error(\"You cannot add a nameless task.\", msg);\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 200,
        "wires": [
            [
                "8d1ac08a97400b5b"
            ]
        ]
    },
    {
        "id": "87e4c093af5a4602",
        "type": "catch",
        "z": "8cb1c5cd55e7b8a6",
        "name": "",
        "scope": [
            "e50d4dcdf5066774"
        ],
        "uncaught": false,
        "x": 270,
        "y": 260,
        "wires": [
            [
                "8d9cc194761fc46c",
                "2753f738ee39cd73"
            ]
        ]
    },
    {
        "id": "312f051dcff7e6b6",
        "type": "link in",
        "z": "8cb1c5cd55e7b8a6",
        "name": "link in 2",
        "links": [
            "8d9cc194761fc46c",
            "a12b6d60aee2364a",
            "10565997cee40a35",
            "120bde15a98516bb",
            "b4551f1736463831"
        ],
        "x": 185,
        "y": 60,
        "wires": [
            [
                "38dcc34721c5c362",
                "93e429c8a65c519d"
            ]
        ]
    },
    {
        "id": "8d9cc194761fc46c",
        "type": "link out",
        "z": "8cb1c5cd55e7b8a6",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "312f051dcff7e6b6"
        ],
        "x": 425,
        "y": 260,
        "wires": []
    },
    {
        "id": "2753f738ee39cd73",
        "type": "debug",
        "z": "8cb1c5cd55e7b8a6",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 320,
        "wires": []
    },
    {
        "id": "2b5268c06721626a",
        "type": "http in",
        "z": "8cb1c5cd55e7b8a6",
        "name": "deleteTask",
        "url": "/deleteTaskasddf",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 420,
        "wires": [
            [
                "aea7e35cce21a0b1",
                "a3fcaea6b671b753"
            ]
        ]
    },
    {
        "id": "aea7e35cce21a0b1",
        "type": "debug",
        "z": "8cb1c5cd55e7b8a6",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 380,
        "wires": []
    },
    {
        "id": "acdae8bb69560a46",
        "type": "function",
        "z": "8cb1c5cd55e7b8a6",
        "name": "db.todo.delete()",
        "func": "const DB = global.get(\"DB\")\nlet todo = DB.todo\n\nconst index = todo.findIndex(x => x.id == msg.payload.id)\n\nif(!~index){\n    msg.error={\n        message:\"No matching task found with the ID.\"\n    }\n    return [null,msg]\n}\n\ntodo.splice(index,1)\n\nDB.todo = todo\n\nglobal.set(\"DB\",DB)\n\n/**\n * ToDo DB Şema\n * id :num\n * name :\"\"\n * done:true|false\n * stamp: {\n    *  CreatedAt: sometime,\n    *  ip: IP,\n    *  user:\"\",\n    *  email: \"\",\n * \n * }\n*/\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 400,
        "wires": [
            [
                "ed47938e691accce"
            ],
            [
                "a12b6d60aee2364a",
                "1f1d86131f830615"
            ]
        ],
        "outputLabels": [
            "Success",
            "Error"
        ]
    },
    {
        "id": "ed47938e691accce",
        "type": "http response",
        "z": "8cb1c5cd55e7b8a6",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 640,
        "y": 400,
        "wires": []
    },
    {
        "id": "a3fcaea6b671b753",
        "type": "function",
        "z": "8cb1c5cd55e7b8a6",
        "name": "validation",
        "func": "if(!msg.payload.id){\n    msg.error = {\n        message:\"The task you wanted to delete must have an ID.\"\n    }\n    return [null, msg]\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 420,
        "wires": [
            [
                "acdae8bb69560a46"
            ],
            [
                "10565997cee40a35",
                "a359aebc43dc478b"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "49cf0a7315e3121f",
        "type": "comment",
        "z": "8cb1c5cd55e7b8a6",
        "name": "Spared",
        "info": "",
        "x": 90,
        "y": 500,
        "wires": []
    },
    {
        "id": "a12b6d60aee2364a",
        "type": "link out",
        "z": "8cb1c5cd55e7b8a6",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "312f051dcff7e6b6"
        ],
        "x": 595,
        "y": 460,
        "wires": []
    },
    {
        "id": "10565997cee40a35",
        "type": "link out",
        "z": "8cb1c5cd55e7b8a6",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "312f051dcff7e6b6"
        ],
        "x": 385,
        "y": 460,
        "wires": []
    },
    {
        "id": "a359aebc43dc478b",
        "type": "debug",
        "z": "8cb1c5cd55e7b8a6",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 500,
        "wires": []
    },
    {
        "id": "1f1d86131f830615",
        "type": "debug",
        "z": "8cb1c5cd55e7b8a6",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 500,
        "wires": []
    },
    {
        "id": "93e429c8a65c519d",
        "type": "debug",
        "z": "8cb1c5cd55e7b8a6",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 60,
        "wires": []
    }
]